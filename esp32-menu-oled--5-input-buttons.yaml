substitutions:
  esp_name: "Remote"
  hide_buttons_in_homeassistant: "true"
  top_entity_id: "bedroom_lamp_switch"
  temp_sensor_1_entity: "sensor.average_indoor_temperature"
  temp_sensor_2_entity: "sensor.bedroom_temperature"
  sda_pin: "22"
  scl_pin: "23"
  display_platform: "ssd1306_i2c"
  display_model: "SH1106 128x64"
  display_address: "0x3C"
  display_brightness: "100%"
  api_key: ""
  encryption_key: ""
  ota_key: ""


#############################
#     end input             #
#############################
esphome:
  name: esp32-menu-oled

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "${encryption_key}"
ota:
  password: "${ota_key}"
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "${esp_name}"
    password: ""
captive_portal:
globals: 
  - id: wifi_connection
    type: bool
    restore_value: no
    initial_value: "false"
# Sensors
sensor:
  - platform: homeassistant
    entity_id: ${temp_sensor_1_entity}
    id: temp_sensor_1_id
    internal: true
  - platform: homeassistant
    entity_id: ${temp_sensor_2_entity}
    id: temp_sensor_2_id
    internal: true

#binary sensors (on/off only sensors)
binary_sensor:
#top entity
  - platform: homeassistant
    id: top_entity_id
    entity_id: ${up_button_entity}
    internal: true
    #Left side entity
  - platform: homeassistant
    id: br_tv
    entity_id: switch.samsung_8_series_55
    internal: true
    #Right side entity
  - platform: homeassistant
    id: flood
    entity_id: switch.back_flood_lights_switch_1
    internal: true
    #Bottom entity
  - platform: homeassistant
    id: bunny
    entity_id: switch.office_light
    internal: true
### Joystick  4 way and select button
  - platform: gpio
    pin: 5
    name: "${esp_name} Select Button"
    id: ctr
    on_press:
      - display.page.show_next: oled
    internal: ${hide_buttons_in_homeassistant}
  - platform: gpio
    pin: 21 
    name: "${esp_name} Left Button"
    id: lft
#### v Comment out between hash marks to use HA automations for buttons
    on_press:
      homeassistant.service:
        service: switch.toggle
        data:
          entity_id: switch.samsung_8_series_55
###############^
    internal: ${hide_buttons_in_homeassistant}
  - platform: gpio
    pin: 18
    name: "${esp_name} Right Button"
    id: rt
####v Comment out between hash marks to use HA automations for buttons
    on_press:
      homeassistant.service:
        service: switch.toggle
        data:
          entity_id: switch.back_flood_lights_switch_1
#######^
    internal: ${hide_buttons_in_homeassistant}
  - platform: gpio
    pin: 19
    name: "${esp_name} Down Button"
    id: dwn
####v Comment out between hash marks to use HA automations for buttons
    on_press:
      homeassistant.service:
        service: switch.toggle
        data:
          entity_id: switch.office_light
############################^         
    internal: ${hide_buttons_in_homeassistant}
  - platform: gpio
    pin: 17
    name: "${esp_name} Up Button"
    id: up
####v Comment out between hash marks to use HA automations for buttons
    on_press:
      homeassistant.service:
        service: light.toggle
        data:
          entity_id: ${up_button_entity}
######################^
    internal: ${hide_buttons_in_homeassistant}
switch:
  - platform: template
    name: "${esp_name} OLED"
    optimistic: true
    turn_on_action:
      - lambda: id(oled).turn_on();
    turn_off_action:
      - lambda: id(oled).turn_off();
#Time sensor
time:
  - platform: homeassistant
    id: esptime
#timer for wifi refresh 
interval: 
  - interval: 10s
    then:
      - if:
          condition:
            wifi.connected:
          then:
            - lambda: |-
                id(wifi_connection) = true;
          else:
            - lambda: |-
                id(wifi_connection) = false;
#Fonts
font:
  - file: 'fonts/mdi.ttf'
    id: mdi11
    size: 26
    glyphs:
      - "\U000F1B20" #Lamp on
      - "\U000F1B1F" #lamp off
      - "\U000F07F4" #tv on
      - "\U000F083A" #tv off
      - "\U000F1987" #flood light
      - "\U000F073A" #cancel icon
      - "\U000F1A62" # bunny off
      - "\U000F1798" # Fan light on
      - "\U000F1A61" # Bunny on
      - "\U000F1797" #fan light off
  - file: "fonts/mdi.ttf"
    id: mdi2
    size: 17
    glyphs: [
      "\U000F05A9", #wifi
      "\U000F05AA", #no wifi
      ]
  - file: 'fonts/mdi.ttf'
    id: mdi3
    size: 36
    glyphs:
      - "\U000F073A"
  - file: 'fonts/arial.ttf'
    id: font11
    size: 11
  - file: 'fonts/arial.ttf'
    id: font16
    size: 15
  - file: 'fonts/arial.ttf'
    id: font8
    size: 10
#Graph settings
graph:
  - id: oled_graph
    duration: 1h
    x_grid: 10min
    y_grid: 1.8     # degC/div
    width: 124
    height: 46
    traces:
      - sensor: temp_sensor_2_id
        line_type: DASHED
        line_thickness: 2
      - sensor: temp_sensor_1_id
        line_type: DOTTED
        line_thickness: 2
#Optional animation GIF        
animation:
  - file: "gif/stars2.gif"
    id: stars
#i2c settings
i2c:
  sda: ${sda_pin}
  scl: ${scl_pin}
display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    id: oled
    address: 0x3C
    brightness: 100%
    rotation: 0
    pages:
      - id: page1
        lambda: |-
          it.rectangle(0, 0, 128, 64);
          //time 
          it.strftime(96, 1, id(font11), "%H:%M", id(esptime).now());
          it.line(94, 0, 94, 13);
          it.line(94, 13, 128, 13);

          // top section
          if (id(top_entity_id).state == (1)) {
          it.print(40, 1, id(mdi11), "\U000F1B20"); 
          } else {
          it.print(40, 1, id(mdi11), "\U000F1B1F");
          }
          it.print(42, 24, id(font8), "Bed");

          // left section
          if (id(br_tv).state == (1)) {
          it.print(1, 18, id(mdi11), "\U000F07F4");
          } else {
          it.print(1, 18, id(mdi11), "\U000F083A");
          }
          it.print(4, 40, id(font8), "T.V.");   

          // Right side
          if (id(flood).state == (1)) {
          it.print(74, 18, id(mdi11), "\U000F1987");
          } else {
          it.print(74, 18, id(mdi11), "\U000F1987");
          it.print(71, 12, id(mdi3), "\U000F073A");
          }
          it.print(75, 40, id(font8), "Flood");

          // bottom
          if (id(bunny).state == (1)) {
          it.print(31, 38, id(mdi11), "\U000F1A61");
          it.print(48, 38, id(mdi11), "\U000F1798");
          } else {
          it.print(31, 38, id(mdi11), "\U000F1A62");
          it.print(49, 40, id(mdi11), "\U000F1797");
          }
          //wifi indicator
          it.printf(110, 44, id(mdi2), "%s", id(wifi_connection) ? "\U000F05A9" : "\U000F05AA");
          it.line(110, 42, 128, 42);
          it.line(110, 42, 110, 64);

      - id: page2
        lambda: |-
          it.rectangle(0, 0, 128, 64);
          it.graph(2, 16, id(oled_graph));
          it.print(16, 0, id(font16), "Temperatures");
      - id: page3
        lambda: |-
          
          id(stars).next_frame();
          
          it.image(0, 0, id(stars), COLOR_ON, COLOR_OFF);





